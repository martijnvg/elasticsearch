/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

esplugin {
    description ''
    classname 'org.elasticsearch.ingest.geolite2.IngestGeoLite2Plugin'
}

dependencies {
    // TODO: maybe write csv parsing logic ourselves instead of depending on external lib:
    testCompile 'net.sf.supercsv:super-csv:2.4.0'
}

task buildGeoLiteIndex(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = "org.elasticsearch.ingest.geolite2.GeoLite2IndexBuilder"
    // TODO: Download and extract the csv files...
    args = [ '/Users/mvg/temp/GeoLite2-City-CSV_20180206/GeoLite2-City-Locations-en.csv',
             '/Users/mvg/temp/GeoLite2-City-CSV_20180206/GeoLite2-City-Blocks-IPv4.csv',
             '/Users/mvg/temp/GeoLite2-City-CSV_20180206/GeoLite2-City-Blocks-IPv6.csv',
             "${project.buildDir}/ingest-geolite2"
    ]
}

project.bundlePlugin.dependsOn(buildGeoLiteIndex)

bundlePlugin {
    from("${project.buildDir}/ingest-geolite2") {
        into 'config/'
    }
}

test.enabled = false